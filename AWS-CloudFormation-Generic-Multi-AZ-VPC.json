{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS Multi-AZ Webserver with RDS backen with 2 public and 2 private subnets inside a vpc.",


  "Metadata" : {
    "AWS::CloudFormation::Interface" : {
      "ParameterGroups" : [
	    {
          "Label": { "default": "Stack Configuration" },
          "Parameters": [ "StackType", "ProjectName" ]
        },
        {
          "Label": { "default": "Network Configuration" },
          "Parameters": [ "VPCCidr", "PublicSubnetACidr", "PublicSubnetBCidr", "PrivateSubnetACidr", "PrivateSubnetBCidr" ]
        }
      ],
      "ParameterLabels" : {
        "ProjectName" : { "default" : "What is the Project Name?" },
        "StackType" : { "default" : "Is this Production, Devevelopment, or Test Environment?"}
      }
    }
  },

  "Parameters" : {

    "StackType" : {
      "Type" : "String",
      "Description" : "Is this a production, stage, test, dev, or other environment",
      "AllowedValues" : [
        "PROD",
        "DEV",
        "TEST",
        "CERT",
        "OTHER"
      ],
      "Default" : "PROD"
    },

    "ProjectName" : {
      "Type" : "String",
      "Description" : "To what project does this stack belong."
    },
	
	"VPCCidr" : {
      "Type" : "String",
      "Description" : "To what project does this stack belong.",
	  "Default" : "172.16.0.0/16"
    },
	
	"PublicSubnetACidr" : {
      "Type" : "String",
      "Description" : "To what project does this stack belong.",
	  "Default" : "172.16.0.0/24"
    },
	
	"PublicSubnetBCidr" : {
      "Type" : "String",
      "Description" : "To what project does this stack belong.",
	  "Default" : "172.16.1.0/24"
    },
	
	"PrivateSubnetACidr" : {
      "Type" : "String",
      "Description" : "To what project does this stack belong.",
	  "Default" : "172.16.10.0/24"
    },
	
	"PrivateSubnetBCidr" : {
      "Type" : "String",
      "Description" : "To what project does this stack belong.",
	  "Default" : "172.16.11.0/24"
    }
  },

  "Mappings" : {
    "Level1Key" : {
      "Level2Key"     : { "Level3Key" : "Value" }
    }
  },

  "Resources" : {

    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "EnableDnsSupport" : "true",
        "EnableDnsHostnames" : "true",
        "CidrBlock" :{ "Ref" : "VPCCidr" },
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AWS::StackName" }, "VPC" ] ] } },
          { "Key" : "Project", "Value" : { "Ref" : "ProjectName" } },
          { "Key" : "StackType", "Value" : { "Ref" : "StackType" } }
        ]
      }
    },

    "VPCFlowLog" : {
      "Type" : "AWS::EC2::FlowLog",
      "DependsOn" : [ "VPC", "VPCFlowLogIAMRole" ],
      "Properties" : {
        "DeliverLogsPermissionArn" : { "Fn::GetAtt" : [ "VPCFlowLogIAMRole" , "Arn" ] },
        "LogGroupName" : { "Fn::Join" : [ "", [ { "Ref" : "ProjectName" }, "/", { "Ref" : "StackType"}, "/", { "Ref" : "AWS::StackName" }, "/VPC" ] ] },
        "ResourceId" : { "Ref" : "VPC" },
        "ResourceType" : "VPC",
        "TrafficType" : "ALL"
      }
    },

    "VPCFlowLogIAMRole" : {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [ {
            "Effect": "Allow",
            "Principal": {
              "Service": [ "vpc-flow-logs.amazonaws.com" ]
            },
            "Action": [ "sts:AssumeRole" ]
          } ]
        },
        "Path": "/"
      }
    },

    "VPCFlowLogIAMPolicy" : {
      "Type" : "AWS::IAM::Policy",
      "Properties" : {
        "PolicyDocument" : {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogGroups",
                "logs:DescribeLogStreams"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ]
        },
        "PolicyName" : "VPCFlowLog",
        "Roles" : [ { "Ref" : "VPCFlowLogIAMRole" } ]
      }
    },
	
	"VPCIPV6CIDR" : {
      "Type" : "AWS::EC2::VPCCidrBlock",
      "DependsOn" : [ "VPC" ],
      "Properties" : {
        "AmazonProvidedIpv6CidrBlock" : "True",
        "VpcId" : { "Ref" : "VPC" }
      }
    },

    "VPCEndPoint" : {
      "Type" : "AWS::EC2::VPCEndpoint",
      "Properties" : {
        "PolicyDocument" : {
          "Statement": [
            {
              "Principal": "*",
              "Action": "*",
              "Effect": "Allow",
              "Resource": [
                { "Fn::Join" : [ "", [ "arn:aws:s3:::" , { "Ref" : "S3Bucket" }, "/*" ] ] }
              ]
            }
          ]
        },
        "RouteTableIds" : [ { "Ref" : "PublicRouteTable" }, { "Ref" : "PrivateRouteTable" } ],
        "ServiceName" : { "Fn::Join": [ "", [ "com.amazonaws.", { "Ref": "AWS::Region" }, ".s3" ] ] },
        "VpcId" : { "Ref" : "VPC" }
      }
    },
	
	"InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AWS::StackName" }, "IGW" ] ] } },
          { "Key" : "Project", "Value" : { "Ref" : "ProjectName" } },
          { "Key" : "StackType", "Value" : { "Ref" : "StackType" } }
        ]
      }
    },
	
	"EgressInternetGateway" : {
	  "Type": "AWS::EC2::EgressOnlyInternetGateway",
	  "Properties": {
		"VpcId": { "Ref" : "VPC" }
	  }
	},

    "GatewayToInternet" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "VPC" },
         "InternetGatewayId" : { "Ref" : "InternetGateway" }
       }
    },

    "PublicSubnetA" : {
      "Type" : "AWS::EC2::Subnet",
	  "DependsOn" : [ "VPC", "VPCIPV6CIDR" ],
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ] },
        "MapPublicIpOnLaunch" : "True",
		"AssignIpv6AddressOnCreation" : "True",
        "CidrBlock" : { "Ref" : "PublicSubnetACidr" },
		"Ipv6CidrBlock" : {
          "Fn::Join" : [
            "",
            [
              {
                "Fn::Select": [
                  "0",
                  {
                    "Fn::Split": [
                      "00::/56",
                      {
                        "Fn::Select" : [ "0",  { "Fn::GetAtt" : [ "VPC", "Ipv6CidrBlocks" ] } ]
                      }
                    ]
                  }
                ]
              },
              "01::/64"
            ]
          ]
        },
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AWS::StackName" }, "PublicSubnetA" ] ] } },
          { "Key" : "Project", "Value" : { "Ref" : "ProjectName" } },
          { "Key" : "StackType", "Value" : { "Ref" : "StackType" } }
        ]
      }
    },

    "PublicSubnetB" : {
      "Type" : "AWS::EC2::Subnet",
	  "DependsOn" : [ "VPC", "VPCIPV6CIDR" ],
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : { "Fn::Select" : [ "2", { "Fn::GetAZs" : "" } ] },
        "MapPublicIpOnLaunch" : "True",
		"AssignIpv6AddressOnCreation" : "True",
        "CidrBlock" : { "Ref" : "PublicSubnetBCidr" },
		"Ipv6CidrBlock" : {
          "Fn::Join" : [
            "",
            [
              {
                "Fn::Select": [
                  "0",
                  {
                    "Fn::Split": [
                      "00::/56",
                      {
                        "Fn::Select" : [ "0",  { "Fn::GetAtt" : [ "VPC", "Ipv6CidrBlocks" ] } ]
                      }
                    ]
                  }
                ]
              },
              "02::/64"
            ]
          ]
        },
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AWS::StackName" }, "PublicSubnetB" ] ] } },
          { "Key" : "Project", "Value" : { "Ref" : "ProjectName" } },
          { "Key" : "StackType", "Value" : { "Ref" : "StackType" } }
        ]
      }
    },

    "PrivateSubnetA" : {
      "Type" : "AWS::EC2::Subnet",
	  "DependsOn" : [ "VPC", "VPCIPV6CIDR" ],
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ] },
        "MapPublicIpOnLaunch" : "False",
		"AssignIpv6AddressOnCreation" : "True",
        "CidrBlock" : { "Ref" : "PrivateSubnetACidr" },
		"Ipv6CidrBlock" : {
          "Fn::Join" : [
            "",
            [
              {
                "Fn::Select": [
                  "0",
                  {
                    "Fn::Split": [
                      "00::/56",
                      {
                        "Fn::Select" : [ "0",  { "Fn::GetAtt" : [ "VPC", "Ipv6CidrBlocks" ] } ]
                      }
                    ]
                  }
                ]
              },
              "03::/64"
            ]
          ]
        },
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AWS::StackName" }, "PrivateSubnetA" ] ] } },
          { "Key" : "Project", "Value" : { "Ref" : "ProjectName" } },
          { "Key" : "StackType", "Value" : { "Ref" : "StackType" } }
        ]
      }
    },

    "PrivateSubnetB" : {
      "Type" : "AWS::EC2::Subnet",
	  "DependsOn" : [ "VPC", "VPCIPV6CIDR" ],
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : { "Fn::Select" : [ "2", { "Fn::GetAZs" : "" } ] },
        "MapPublicIpOnLaunch" : "False",
		"AssignIpv6AddressOnCreation" : "True",
        "CidrBlock" : { "Ref" : "PrivateSubnetBCidr" },
		"Ipv6CidrBlock" : {
          "Fn::Join" : [
            "",
            [
              {
                "Fn::Select": [
                  "0",
                  {
                    "Fn::Split": [
                      "00::/56",
                      {
                        "Fn::Select" : [ "0",  { "Fn::GetAtt" : [ "VPC", "Ipv6CidrBlocks" ] } ]
                      }
                    ]
                  }
                ]
              },
              "04::/64"
            ]
          ]
        },
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AWS::StackName" }, "PrivateSubnetB" ] ] } },
          { "Key" : "Project", "Value" : { "Ref" : "ProjectName" } },
          { "Key" : "StackType", "Value" : { "Ref" : "StackType" } }
        ]
      }
    },
	
	"EIPNATGateway" : {
	   "Type" : "AWS::EC2::EIP",
	   "Properties" : {
		  "Domain" : "vpc"
	   }
	},
	
	"NATGateway" : {
	  "Type" : "AWS::EC2::NatGateway",
	  "DependsOn" : [ "EIPNATGateway", "PublicSubnetB", "GatewayToInternet" ],
	  "Properties" : {
		"AllocationId" : { "Fn::GetAtt" : [ "EIPNATGateway", "AllocationId" ] },
		"SubnetId" : { "Ref" : "PublicSubnetB" },
		"Tags" : [
			{ "Key" : "Name", "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AWS::StackName" }, "NAT-Gateway" ] ] } },
			{ "Key" : "Project", "Value" : { "Ref" : "ProjectName" } },
			{ "Key" : "StackType", "Value" : { "Ref" : "StackType" } }
		]
	  }
	},

    "PublicRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AWS::StackName" }, "Public-RouteTable" ] ] } },
          { "Key" : "Project", "Value" : { "Ref" : "ProjectName" } },
          { "Key" : "StackType", "Value" : { "Ref" : "StackType" } }
        ]
      }
    },

    "PublicIPv4Route" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "GatewayToInternet",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },
	
	"PublicIPv6Route" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "GatewayToInternet",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicRouteTable" },
        "DestinationIpv6CidrBlock" : "::/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },

    "PrivateRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AWS::StackName" }, "Private-RouteTable" ] ] } },
          { "Key" : "Project", "Value" : { "Ref" : "ProjectName" } },
          { "Key" : "StackType", "Value" : { "Ref" : "StackType" } }
        ]
      }
    },
	
	"PrivateIPv4Route" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "NATGateway",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "NatGatewayId" : { "Ref" : "NATGateway" }
      }
    },
	
	"PrivateIPv6Route" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "EgressInternetGateway",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTable" },
        "DestinationIpv6CidrBlock" : "::/0",
		"EgressOnlyInternetGatewayId" : { "Ref" : "EgressInternetGateway" }
      }
    },
	
	"PublicSubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnetA" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },

    "PublicSubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnetB" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },

    "PrivateSubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnetA" },
        "RouteTableId" : { "Ref" : "PrivateRouteTable" }
      }
    },

    "PrivateSubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnetB" },
        "RouteTableId" : { "Ref" : "PrivateRouteTable" }
      }
    },
	
	"PublicSubnetNetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AWS::StackName" }, "NACL-PublicSubnets" ] ] } },
          { "Key" : "Project", "Value" : { "Ref" : "ProjectName" } },
          { "Key" : "StackType", "Value" : { "Ref" : "StackType" } }
        ]
      }
    },

    "PrivateSubnetNetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AWS::StackName" }, "NACL-PrivateSubnets" ] ] } },
          { "Key" : "Project", "Value" : { "Ref" : "ProjectName" } },
          { "Key" : "StackType", "Value" : { "Ref" : "StackType" } }
        ]
      }
    },

    "InboundPublicSSHNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicSubnetNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "22", "To" : "22" }
      }
    },

    "OutboundPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicSubnetNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
      }
    },
	
	"PublicSubnetANACLAssociation" : {
	  "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
	  "Properties" : {
		"SubnetId" : { "Ref" : "PublicSubnetA" },
		"NetworkAclId" : { "Ref" : "PublicSubnetNetworkAcl" }
	  }
	},
	
	"PublicSubnetBNACLAssociation" : {
	  "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
	  "Properties" : {
		"SubnetId" : { "Ref" : "PublicSubnetB" },
		"NetworkAclId" : { "Ref" : "PublicSubnetNetworkAcl" }
	  }
	},
	
	"PrivateSubnetANACLAssociation" : {
	  "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
	  "Properties" : {
		"SubnetId" : { "Ref" : "PrivateSubnetA" },
		"NetworkAclId" : { "Ref" : "PrivateSubnetNetworkAcl" }
	  }
	},
	
	"PrivateSubnetBNACLAssociation" : {
	  "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
	  "Properties" : {
		"SubnetId" : { "Ref" : "PrivateSubnetB" },
		"NetworkAclId" : { "Ref" : "PrivateSubnetNetworkAcl" }
	  }
	},

    "EC2DefaultSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable access to the EC2 host",
        "VpcId" : { "Ref" : "VPC" },
        "SecurityGroupIngress" : [
          {
            "IpProtocol" : "tcp",
            "FromPort" : "22",
            "ToPort" : "22",
            "CidrIp" : "172.16.16.0/20"
          },
          {
            "IpProtocol" : "icmp",
            "FromPort" : "-1",
            "ToPort" : "-1",
            "CidrIp" : "0.0.0.0/0"
          }
        ],
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AWS::StackName" }, "EC2-SecurityGroup" ] ] } },
          { "Key" : "Project", "Value" : { "Ref" : "ProjectName" } },
          { "Key" : "StackType", "Value" : { "Ref" : "StackType" } }
        ]
      }
    },


	"S3Bucket" : {
		"Type" : "AWS::S3::Bucket",
		"Properties" : {
		  "Tags" : [
			{ "Key" : "Name", "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AWS::StackName" }, "Logs" ] ] } },
			{ "Key" : "Project", "Value" : { "Ref" : "ProjectName" } },
			{ "Key" : "StackType", "Value" : { "Ref" : "StackType" } }
		  ]
		}
	},

	"S3BucketPolicy" : {
	 "Type" : "AWS::S3::BucketPolicy",
	 "Properties" : {
		"Bucket" : { "Ref" : "S3Bucket" },
		"PolicyDocument" : {
		  "Version": "2012-10-17",
		  "Id": "Policy1475025065271",
		  "Statement": [
			{
			  "Sid": "Stmt1475025063221",
			  "Effect": "Allow",
			  "Principal": "*",
			  "Action": "s3:PutObject",
			  "Resource": { "Fn::Join" : [ "", [ "arn:aws:s3:::", { "Ref" : "S3Bucket" }, "/*" ] ] }
			}
		  ]
		}
	 }
	}
  },

  "Outputs" : {
    "VPCId" : {
      "Description" : "VPCId of the newly created VPC",
      "Value" :  { "Ref" : "VPC" }
	},
    "S3BucketName" : {
      "Description" : "Cloud Stack Temporary S3 Bucket",
      "Value" : { "Ref" : "S3Bucket" }
    }
  }
}